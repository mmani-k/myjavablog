buildscript {
    repositories {
        jcenter()
    }
    dependencies {
		classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.0.0"
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.1.RELEASE")
    }
}

apply plugin: "com.jfrog.artifactory"
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
//group = 'my.code'
//version = '1.0'
plugins {
  id "com.jfrog.artifactory" version "4.0.0"
}
jar{
	baseName = 'myblog'
	appendix = 'myproject'
	version = '1.0-SNAPSHOT'
}

artifacts {
    archives jar
}
repositories {
    jcenter()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
   compile 'mysql:mysql-connector-java:5.1.31'
   compile 'commons-dbcp:commons-dbcp:1.4'  
   compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    testCompile("junit:junit")
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

//publishing {
 //   publications {
 //       maven(MavenPublication) {
 //           groupId 'org.gradle.sample'
 //           artifactId 'project1-sample'
 //           version '1.1'
//
 //           from components.java
//        }
 //   }
//}

publishing {
    publications {
        mavenJava(MavenPublication) {
		    groupId 'org.gradle.sample'
            artifactId 'project1-sample'
            version '1.1'
            from components.java
        }
    }
    //repositories {
    //    maven {
    //        credentials {
    //          username 'admin'
    //          password 'password'
    //        }
    //        url "http://localhost:8081/artifactory/libs-release-local"
     //   }
    //}
}

artifactory {
  contextUrl = 'http://localhost:8080/artifactory'   //The base Artifactory URL if not overridden by the publisher/resolver
  publish {
    contextUrl = 'http://localhost:8080/artifactory'   //The base Artifactory URL for the publisher
    repository {
      repoKey = 'integration-libs'   //The Artifactory repository key to publish to
      username = 'admin'          //The publisher user name
      //password = 'deployerPaS*'       //The publisher password
    }
    defaults {
        //List of Gradle Publications (names or objects) from which to collect the list of artifacts to be deployed to Artifactory.
        publications ('mavenJava')
        ////List of Gradle Configurations (names or objects) from which to collect the list of artifacts to be deployed to Artifactory. 
        publishConfigs('archives', 'published')                   
        properties = ['qa.level': 'basic', 'q.os': 'win32, deb, osx']  //Optional map of properties to attach to all published artifacts
        publishBuildInfo = true   //Publish build-info to Artifactory (true by default)
        publishArtifacts = true   //Publish artifacts to Artifactory (true by default)
        publishPom = true   //Publish generated POM files to Artifactory (true by default).
    }
  }
  resolve {
    contextUrl = 'http://localhost:8080/artifactory'   //The base Artifactory URL for the publisher
    repository {
      repoKey = 'integration-libs'   //The Artifactory repository key to publish to
      username = 'admin'          //The publisher user name
      //password = 'deployerPaS*'       //The publisher password
    }
  }
}
